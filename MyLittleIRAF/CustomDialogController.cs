// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using System.Collections.Generic;

namespace MyLittleIRAF
{
	public partial class CustomDialogController : NSViewController
	{
        private NSViewController _presentor;
        private List<string> _listString = new List<string>();

        public string RadioId { get; set; }

        public int Index1 { get; set; }
        public int Index2 { get; set; }

        public List<string> BoxSpectraList
        {
            get { return _listString; }
            set { _listString = value; }
        }


        public NSViewController Presentor
        {
            get {   return _presentor; }
            set {   _presentor = value; }
        }

        public CustomDialogController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewWillAppear()
        {
            base.ViewWillAppear();
            RadioId = "PlusId";
            ComboBox1.UsesDataSource = true;
            ComboBox1.DataSource = new ComboBoxDataSource(BoxSpectraList);

            ComboBox2.UsesDataSource = true;
            ComboBox2.DataSource = new ComboBoxDataSource(BoxSpectraList);
        }

        partial void AcceptButton(NSObject sender)
        {

            if((int)ComboBox1.SelectedIndex == -1 | (int)ComboBox2.SelectedIndex == -1)
            {
                var alert = new NSAlert()
                {
                    AlertStyle = NSAlertStyle.Critical,
                    InformativeText = "In the both lists choose by spectrum.",
                    MessageText = "Spectrum was not selected!",
                };
                alert.RunModal();
            }
            else
            {
                Index1 = (int)ComboBox1.SelectedIndex;
                Index2 = (int)ComboBox2.SelectedIndex;
                RaiseSheetAccepted();
                CloseSheet();
            }




        }

        partial void CancelButton(NSObject sender)
        {
            RaiseSheetCanceled();
            CloseSheet();

        }

        partial void ChooseOperationButton(NSButton sender)
        {
            RadioId = sender.Identifier;
        }


        private void CloseSheet()
        {
            Presentor.DismissViewController(this);
        }

        public EventHandler SheetAccepted;

        internal void RaiseSheetAccepted()
        {
            if (this.SheetAccepted != null)
                this.SheetAccepted(this, EventArgs.Empty);

        }

        public EventHandler SheetCanceled;

        internal void RaiseSheetCanceled()
        {
            if (this.SheetCanceled != null)
                this.SheetCanceled(this, EventArgs.Empty);
        }
    }
}
