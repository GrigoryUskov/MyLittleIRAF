// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;

namespace MyLittleIRAF
{
    public partial class TrimDialogController : NSViewController
    {

        public NSViewController Presentor { get; set; }
        public string Lamda1 { get; set; }
        public string Lamda2 { get; set; }


        public TrimDialogController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewWillAppear()
        {
            base.ViewWillAppear();
            Lamda1 = "";
            Lamda2 = "";

            Lambda1TextField.StringValue = "";
            Lambda2TextField.StringValue = "";



            Lambda1TextField.Changed += (sender, e) =>
            {
                Lamda1 = Lambda1TextField.StringValue;
            };
            Lambda2TextField.Changed += (sender, e) =>
            {
                Lamda2 = Lambda2TextField.StringValue;
            };

        }


        partial void CutButton(NSObject sender)
        {



            try
            {
                double d1 = Convert.ToDouble(Lamda1);
                double d2 = Convert.ToDouble(Lamda2);

                RaiseSheetAccepted();
                CloseSheet();

            }
            catch (FormatException)
            {
                var alert = new NSAlert()
                {
                    AlertStyle = NSAlertStyle.Critical,
                    InformativeText = "Check your text fields...",
                    MessageText = "Non numeric type",
                };
                alert.RunModal();
            }



        }

        partial void CancelButton(NSObject sender)
        {
            RaiseSheetCanceled();
            CloseSheet();
        }

        private void CloseSheet()
        {
            Presentor.DismissViewController(this);
        }


        public EventHandler SheetAccepted;

        internal void RaiseSheetAccepted()
        {
            if (this.SheetAccepted != null)
                this.SheetAccepted(this, EventArgs.Empty);

        }

        public EventHandler SheetCanceled;

        internal void RaiseSheetCanceled()
        {
            if (this.SheetCanceled != null)
                this.SheetCanceled(this, EventArgs.Empty);
        }
    }
}
